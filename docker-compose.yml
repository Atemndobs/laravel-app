services:
    nginx:
        container_name: nginx
        image: atemndobs/nginx:v1.4.0
        depends_on:
            - php-fpm
        ports:
            - "8899:80"
         #   - "8443:443"
        volumes:
            - "${NGINX_HOST_LOG_PATH}:/var/log/nginx"
            - "${NGINX_SITES_PATH}:/etc/nginx/sites-available"
            - "${NGINX_SSL_PATH}:/etc/nginx/ssl"
            - "${NGINX_SSL_PATH}:/usr/lib/ssl"
            - "${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}"
        networks:
            - sail
        privileged: true
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        environment:
            TZ: 'Europe/Berlin'

    php-fpm:
        container_name: php-fpm
        image: atemndobs/laravel-php-fpm:v1.9.0
#        image: atemndobs/laravel-php-fpm:v1.9.0
#        build:
#            context: ../docker/php-fpm
#            dockerfile: Dockerfile
#            args:
#                WWWGROUP: '${WWWGROUP}'
        volumes:
            - "${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}"
            - "../docker/php-fpm/scdl.cfg:/var/www/.config/scdl/scdl.cfg"
            - "${APP_CODE_PATH_HOST}/storage/logs:/usr/local/stackify/stackify-php-apm/log"
            - "${APP_CODE_PATH_HOST}/storage/logs:/var/www/storage/logs"
        networks:
            - sail
        privileged: true
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        expose:
            -   9000
        ports:
            - "9000:9000"
        environment:
            TZ: 'Europe/Berlin'
        # logging:
        #     driver: loki
        #     options:
        #         loki-url: "http://loki:3100/loki/api/v1/push"
        #      #   loki-external-labels: "container_name={{.Name}},container_id={{.ID}}"
        #         loki-external-labels: "app=laravel,service=php-fpm"
#    soketi:
#        image: 'quay.io/soketi/soketi:latest-16-alpine'
#        container_name: websockets
#        environment:
#            SOKETI_DEBUG: '1'
#            SOKETI_METRICS_SERVER_PORT: '9601'
#        ports:
#            - '${SOKETI_PORT:-6001}:6001'
#            - '${SOKETI_METRICS_SERVER_PORT:-9601}:9601'
#        networks:
#            - sail

    meilisearch:
        container_name: meilisearch
       # image: 'getmeili/meilisearch:v0.29.0-pagination.beta.3'
        image: getmeili/meilisearch:v1.6
        ports:
            - '${FORWARD_MEILISEARCH_PORT:-7700}:7700'
        volumes:
            - 'sail-meilisearch:/data.ms'
        networks:
            - sail
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        healthcheck:
            test: ["CMD", "wget", "--no-verbose", "--spider",  "http://localhost:7700/health"]
            retries: 3
            timeout: 5s
        environment:
            TZ: 'Europe/Berlin'
#            MEILI_MASTER_KEY: 'masterKey'

    rabbitmq:
        image: rabbitmq:3-management-alpine
        container_name: 'rabbitmq'
        ports:
            - "5672:5672"
            - "15672:15672"
        volumes:
            - 'sail-rabbitmq:/data.rabbitmq'
        networks:
            - sail
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        environment:
            TZ: 'Europe/Berlin'

    redis:
        image: 'bitnami/redis:latest'
        container_name: redis
        environment:
            - ALLOW_EMPTY_PASSWORD=yes
        networks:
            - sail
        ports:
            - '6380:6379'
        volumes:
            - 'sail-redis:/data'
        restart: on-failure

#    db:
#        image: postgres
#        restart: always
#        environment:
#            POSTGRES_PASSWORD: mage
#        volumes:
#            - pg-data:/var/lib/postgresql/data
#        healthcheck:
#            test: ['CMD-SHELL', 'pg_isready']
#            interval    : 1s
#            timeout: 5s
#            retries: 10
#
#    adminer:
#        image: adminer
#        restart: always
#        ports:
#            - 6677:8080

#    mailhog:
#        container_name: mailhog
#        image: mailhog/mailhog:latest
#        ports:
#            - '${FORWARD_MAILHOG_PORT:-1025}:1025'
#            - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
#        networks:
#            - sail
#        environment:
#            TZ: 'Europe/Berlin'
#    essentia:
#        image: atemndobs/essentia:v1.0
##        build:
##            context: ./docker/essentia
#        container_name: essentia
#        ports:
#            - "5000:5000"
#        volumes:
#            - ./storage/app/public/data:/app/data
#            - ./storage/app/public/essentia:/essentia
#        networks:
#            - sail
networks:
    sail:
        driver: bridge

volumes:
    sail-mysql:
        driver: local
    sail-redis:
        driver: local
    sail-meilisearch:
        driver: local
    sail-rabbitmq:
        driver: local
    redisinsight-data:
        driver: local
    typesense-data:
        driver: local
    pg-data:
        driver: local
