version: '3.3'
services:
    nginx:
        container_name: nginx
        #image: atemndobs/nginx:v1
        build:
            context: ./docker/nginx
            args:
                WWWGROUP: 1000
                WWWUSER: "sail"
        depends_on:
            - php-fpm
        ports:
            - "8899:80"
            - "8443:443"
        volumes:
            - "${NGINX_HOST_LOG_PATH}:/var/log/nginx"
            - "${NGINX_SITES_PATH}:/etc/nginx/sites-available"
            - "${NGINX_SSL_PATH}:/etc/nginx/ssl"
           # - "${NGINX_SSL_PATH}:/usr/lib/ssl"
            - "${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}"
        networks:
            - sail
        privileged: true
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        environment:
            TZ: 'Europe/Berlin'

    php-fpm:
        container_name: php-fpm
 #       image: atemndobs/php-fpm:8.1
        build:
            context: ./docker/php-fpm
            args:
                WWWGROUP: 1000
                WWWUSER: "sail"
        volumes:
            - "${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}"
            - "./docker/php-fpm/scdl.cfg:/root/.config/scdl/scdl.cfg"
            - "${APP_CODE_PATH_HOST}/storage/logs:/usr/local/stackify/stackify-php-apm/log"
        networks:
            - sail
        privileged: true
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        expose:
            -   9000
        ports:
            -   9000:9000
        depends_on:
          #  - mariadb-master
           # - redis
            - meilisearch
        environment:
            TZ: 'Europe/Berlin'

#    mysql:
#        container_name: mysql
#        image: 'mysql/mysql-server:8.0'
#        #restart: always
#        command: --default-authentication-plugin=mysql_native_password
#        ports:
#            - '${FORWARD_DB_PORT:-3307}:3306'
#        environment:
#            MYSQL_ROOT_PASSWORD: 'mage'
#            MYSQL_ROOT_HOST: "mysql"
#            MYSQL_DATABASE: 'mage'
#            MYSQL_USER: 'mage'
#            MYSQL_PASSWORD: 'mage'
#            MYSQL_ALLOW_EMPTY_PASSWORD: 1
#            TZ: 'Europe/Berlin'
#        volumes:
#            - sail-mysql:/var/lib/mysql
#            - "${APP_CODE_PATH_HOST}/storage/app/backups/:/backups${APP_CODE_CONTAINER_FLAG}"
#        networks:
#            - sail
#        healthcheck:
#            test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
#            retries: 3
#            timeout: 5s

    meilisearch:
        container_name: meilisearch
        image: 'getmeili/meilisearch:v0.29.0-pagination.beta.3'
        ports:
            - '${FORWARD_MEILISEARCH_PORT:-7700}:7700'
        volumes:
            - 'sail-meilisearch:/data.ms'
        networks:
            - sail
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        healthcheck:
            test: ["CMD", "wget", "--no-verbose", "--spider",  "http://localhost:7700/health"]
            retries: 3
            timeout: 5s
        environment:
            TZ: 'Europe/Berlin'

    rabbitmq:
        image: rabbitmq:3-management-alpine
        container_name: 'rabbitmq'
        ports:
            - "5672:5672"
            - "15672:15672"
        volumes:
            - 'sail-rabbitmq:/data.rabbitmq'
        networks:
            - sail
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        environment:
            TZ: 'Europe/Berlin'

    redis:
        image: 'bitnami/redis:latest'
        environment:
            - ALLOW_EMPTY_PASSWORD=yes
        networks:
            - sail
        ports:
            - '6380:6379'
        volumes:
            - 'sail-redis:/data'
        restart: on-failure

    mailhog:
        container_name: mailhog
        image: mailhog/mailhog:latest
        ports:
            - '${FORWARD_MAILHOG_PORT:-1025}:1025'
            - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
        networks:
            - sail
        environment:
            TZ: 'Europe/Berlin'

    traefik:
        image: "traefik:v2.9"
        container_name: "traefik"
        command:
            - "--log.level=DEBUG"
            - "--api.insecure=true"
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=false"
            - "--entrypoints.web.address=:80"
        ports:
            - "81:80"
            - "8055:8080"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
            - ./letsencrypt:/letsencrypt2
        networks:
            - sail

    essentia:
        #image: mtgupf/essentia
        build:
            context: ./docker/essentia
        container_name: essentia
        ports:
            - "5000:5000"
        volumes:
            - ./storage/app/public/data:/app/data
            - ./storage/app/public/essentia:/essentia
        networks:
            - sail
    whoami:
        image: "traefik/whoami"
        container_name: "simple-service"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"
            - "traefik.http.routers.whoami.entrypoints=web"
        networks:
            - sail
networks:
    sail:
        driver: bridge

volumes:
    sail-mysql:
        driver: local
    sail-redis:
        driver: local
    sail-meilisearch:
        driver: local
    sail-rabbitmq:
        driver: local
    redisinsight-data:
        driver: local
